{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-jgl926"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ImportSweetTreatsSales_Audit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import sales data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "RunSeqNo",
										"value": {
											"value": "@variables('RunSeqNo')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Azure-Data-Factory-by-Example-Second-Edition-main/SampleData/SweetTreats",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE dbo.Sales_LOAD",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ABS_CSV_SweetTreats",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Import sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineEnd]",
							"storedProcedureParameters": {
								"FilesRead": {
									"value": {
										"value": "@activity('Import sales data').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Import sales data').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Import sales data').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunEndDateTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RunSeqNo": {
									"value": {
										"value": "@variables('RunSeqNo')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunStatus": {
									"value": "Done",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup RunSeqNo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[LogPipelineStart]",
								"storedProcedureParameters": {
									"Comments": {
										"type": "String",
										"value": {
											"value": "Pipeline @{pipeline().Pipeline} executed in @{pipeline().DataFactory}\n",
											"type": "Expression"
										}
									},
									"PipelineRunId": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"RunStartDateTime": {
										"type": "DateTime",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ASQL_dboSalesLoad",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set RunSeqNo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup RunSeqNo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunSeqNo",
							"value": {
								"value": "@int(activity('Lookup RunSeqNo').output.firstRow.RunSeqNo)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"RunSeqNo": {
						"type": "Integer",
						"defaultValue": -1
					},
					"property_code": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Chapter4"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IngestHandyCandyMessages')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Azure-Data-Factory-by-Example-Second-Edition-main/SampleData/HandyCandy",
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['TransactionId']"
										},
										"sink": {
											"name": "TransactionId",
											"type": "Guid"
										}
									},
									{
										"source": {
											"path": "$['TransactionDate']"
										},
										"sink": {
											"name": "TransactionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['StoreId']"
										},
										"sink": {
											"name": "StoreId",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "[['Product']"
										},
										"sink": {
											"name": "Product",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Price']"
										},
										"sink": {
											"name": "Price",
											"type": "Single"
										}
									}
								],
								"collectionReference": "$['Items']"
							}
						},
						"inputs": [
							{
								"referenceName": "ABS_JSON_HandyCandy",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ABS_PAR_HandyCandy",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Chapter3"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_rental_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_rental_data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "property_code",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "PipelineRunId",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "current",
									"wildcardFileName": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "DELETE FROM dbo.rental_data WHERE property_code = '@{variables('property_code')}'",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "stjgl926",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Property Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "property_code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "unit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Tenant Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tenant_code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Tenant",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tenant",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Market Rent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "market_rent",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Actual Rent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "actual_rent",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Total Rent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "total_rent",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Total Concessions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "total_concessions",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Net Effective Rent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "net_effective_rent",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Total Lease Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "total_lease_value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Tenant Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tenant_status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Application Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "application_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Lease Sign Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "lease_sign_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Lease From",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "lease_from",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Lease To",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "lease_to",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Notice Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "notice_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Move In",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "move_in",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Move Out",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "move_out",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Reason for Move Out",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reason_for_move_out",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Application Approved",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "application_approved",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Application Canceled",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "application_canceled",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Application Denied",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "application_denied",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "PipelineRunId",
											"type": "String"
										},
										"sink": {
											"name": "PipelineRunId",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "customer1CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "rental_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "clean_source_after_success",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "move_to_archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "customer1SourceBinary",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": false,
								"wildcardFileName": {
									"value": "@pipeline().parameters.filename",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "move_to_archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "load_rental_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "customer1/current/"
							},
							{
								"name": "Destination",
								"value": "customer1/history/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "current",
									"wildcardFileName": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "customer1SourceBinary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "customer1HistoryBinary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "property_code",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "property_code",
							"value": {
								"value": "@split(pipeline().parameters.filename, '-')[0]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "move_to_failed",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "load_rental_data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "customer1/current/"
							},
							{
								"name": "Destination",
								"value": "customer1/history/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFolderPath": "current",
									"wildcardFileName": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "customer1SourceBinary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "customer1FailedBinary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "clean_source_after_fail",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "move_to_failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "customer1SourceBinary",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": false,
								"wildcardFileName": {
									"value": "@pipeline().parameters.filename",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "r0500min-customer1-07062025151308.csv"
					}
				},
				"variables": {
					"property_code": {
						"type": "String"
					}
				},
				"folder": {
					"name": "doboshco"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/main_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "customer1SourceBinary",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute load_rental_data",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "load_rental_data",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"filename": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "doboshco"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/load_rental_data')]"
			]
		}
	]
}